# RONEY

name: Docker Image CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # secrets:
  #   GHC_TOKEN_RONEY:
  #     description: Github token to use to clone
  #     required: true
#     git_user_roney:
#       description: Github user to use to clone
#       required: false

jobs:

  Build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Download all REPOS
      env:
        # git_user: "roneysantos"
        TOKEN: "${{ secrets.GHC_TOKEN_RONEY }}"
        # GHORG: "roney-labs"
        # GIT_BASE_URL: "github.com"
      run: |
        mkdir HSE && cd HSE
        GHORG=roney-labs; curl -H "Authorization: token ${TOKEN}" \
        -L "https://api.github.com/orgs/$GHORG/repos?per_page=1000" | grep -o "https://github.com/${GHORG}[^\"]*.git"

    - name: Show repos
      run: | 
        pwd
        ls -lh /home/runner/work/docker-build-github-actions/docker-build-github-actions/HSE/*/*

    - name: Install dependencies
      run: |
        sudo apt-get install openssl policycoreutils libxml2 libcap-* tpm2* -y
        which openssl
        dpkg -l | grep  policycoreutils

    - name: Build the Docker image
      run: docker build . --file Dockerfile --tag image-nginx:latest

    - name: Run the Docker image
      run: docker run --name mynginximage -p 80:80 -d image-nginx:latest

    - name: test url
      run: |
        curl -X GET "http://localhost"

  Ubuntu:

    runs-on: ubuntu-latest
    needs: [ Build ]

    steps:
    - uses: actions/checkout@v3
    - name: Show enviroment run in github action
      run: cat /etc/issue

    # - name: Set envs
    #   run: |
    #     export DEBIAN_FRONTEND=noninteractive
    #     export DEBCONF_NONINTERACTIVE_SEEN=true

    # - name: Save debconf
    #   run: |
    #     sudo printf 'tzdata tzdata/Areas select Etc\ntzdata tzdata/Zones/Etc select UTC\n' | debconf-set-selections